import com.sun.tracing.dtrace.DependencyClass;

ext {
  hibernateCoreVersion = "4.3.1.Final"
  springVersion = "4.0.7.RELEASE"
  javassistVersion = "3.8.0.GA"
  mysqlConnectorJavaVersion = "5.1.6"
  hibernateValidatorVersion = "5.1.3.Final"
  hsqldbVersion = "1.8.0.10"
  jmsApiVersion = "1.1-rev-1"
	groovyVersion = "2.3.10"
  currentEnvironment = project.hasProperty("environment")?environment:"development"
  timoneConfigurationDir = "${System.getProperty('user.home')}/.emailer"
}

buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.4'
  }
}

subprojects {
  apply plugin:"java"
  apply plugin:'groovy'
  apply plugin:'eclipse'
  version = "0.1.4-ALPHA"
  group = "com.tim.one"
  repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://trama.mx:8082/archiva/repository/snapshots" }
    maven { url "http://trama.mx:8082/archiva/repository/internal" }
  }
  dependencies {
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-all:1.10.19"
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "org.spockframework:spock-spring:0.7-groovy-2.0"
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"
    compile "log4j:log4j:1.2.17"
    compile 'net.bull.javamelody:javamelody-core:1.53.0'
  }
}

project(":timone-emailer:sender"){
  dependencies{
    compile "org.springframework.integration:spring-integration-mail:4.0.4.RELEASE"
    compile 'javax.mail:mail:1.4.7'
    compile "org.freemarker:freemarker:2.3.20"
  }
}

project(":timone-emailer:formatter"){
  dependencies{
    testCompile "javax.servlet:servlet-api:2.5"
    compile "org.springframework:spring-orm:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"
    testCompile "org.springframework:spring-test:$springVersion"
    compile "org.springframework:spring-context-support:$springVersion"
    compile "org.springframework:spring-tx:$springVersion"
    compile "org.springframework:spring-expression:$springVersion"
    compile "org.springframework:spring-jms:$springVersion"
    compile "org.apache.commons:commons-lang3:3.0.1"
    compile "javax.mail:mail:1.4.1"
    compile "javax.jms:jms-api:$jmsApiVersion"
    compile "commons-io:commons-io:1.4"
    compile "javassist:javassist:$javassistVersion"
    compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
    compile "org.apache.activemq:activemq-spring:5.8.0"
    compile project(":timone-emailer:sender")
  }
}

project(":services"){
  dependencies {
    compile "org.apache.commons:commons-lang3:3.0.1"
		compile "commons-lang:commons-lang:2.3"
    compile "com.google.code.gson:gson:2.2.2" 
    compile project(":timone-emailer:formatter")
  }
  
	def filesToInclude = ["*-${currentEnvironment}.properties","timone.properties","emailer.properties"]
  def toDirectory = 'src/test/resources/config'
  task settingEnvironment(type:Sync) {
    from timoneConfigurationDir
    into toDirectory
    include filesToInclude
    rename { String fileName -> fileName.replace("-${currentEnvironment}", '') }
  }
  processResources.dependsOn settingEnvironment
}

project(":web"){
	apply plugin:"war"
  war.archiveName "timone.war"
	apply plugin:"jetty"
  httpPort=8082
  apply plugin: 'tomcat'
  tomcat {
    httpPort = 8082
  }
	dependencies{

    def tomcatVersion = '7.0.54'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
    "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
      exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
  
		providedCompile "javax.servlet:servlet-api:2.5"
		compile "com.fasterxml.jackson.core:jackson-databind:2.4.3"
		compile "c3p0:c3p0:0.9.1.2"
		compile "commons-fileupload:commons-fileupload:1.2.2"
		compile "mysql:mysql-connector-java:$mysqlConnectorJavaVersion"
    compile "org.slf4j:slf4j-nop:1.7.7"
    compile "org.springframework.security.oauth:spring-security-oauth:2.0.3.RELEASE"
    compile "org.springframework:spring-aop:$springVersion"
    compile "org.aspectj:aspectjrt:1.8.2"
    compile "org.aspectj:aspectjweaver:1.8.2"
    compile 'com.lowagie:itext:4.2.1'
		compile 'org.jsoup:jsoup:1.8.1'
		compile 'javax.el:el-api:2.2.1-b04'
		compile 'org.glassfish.web:el-impl:2.2.1-b05'
		providedCompile "javax.servlet:jstl:1.2"
    compile project(":services")
	}
	
	println "Setting environment to: ${currentEnvironment}"
	
	def filesToInclude = ["*-${currentEnvironment}.properties"]
	def toDirectory = 'src/main/resources/config'
	task settingEnvironment(type:Copy) {
		from timoneConfigurationDir
		into toDirectory
		include filesToInclude
		rename { String fileName -> fileName.replace("-${currentEnvironment}", '') }
	}

  task settingLog4jProperties(type:Copy){
    from "${System.getProperty('user.home')}/.emailer/log4j-${currentEnvironment}.properties"
    into "src/main/resources/"
		rename { String fileName -> fileName.replace("-${currentEnvironment}", '') }
  }

  processResources.dependsOn "settingEnvironment","settingLog4jProperties"
}
